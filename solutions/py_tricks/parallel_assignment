# parallel_assignment.py

# 1. 基础平行赋值
x, y = 1, 2

# 2. 变量交换
x, y = y, x

# 3. 列表解包
lst = [1, 2, 3]
a, b, c = lst

# 4. * 收集多余部分
head, *body, tail = [1, 2, 3, 4, 5]

# 5. 链表反转技巧
# 假设定义如下：
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def reverse_list(head):
    pre, cur = None, head
    while cur:
        cur.next, pre, cur = pre, cur, cur.next
    return pre

# 6. 斐波那契数列构建
fib = [0, 1]
for _ in range(10):
    a, b = fib[-2], fib[-1]
    fib.append(a + b)

# 7. 函数返回值解包
def divide(x, y):
    return x // y, x % y

quotient, remainder = divide(10, 3)

# 8. zip + 解包
pairs = [(1, 2), (3, 4)]
a_list, b_list = zip(*pairs)

# 9. 嵌套结构解包
tuple_nested = (1, (2, 3))
a, (b, c) = tuple_nested

# 10. 条件判断结合
flag = True
x, y = (1, 0) if flag else (0, 1)

# 11. enumerate 应用
nums = [4, 5, 6]
for i, val in enumerate(nums):
    print(i, val)
